#!/bin/sh /etc/rc.common

START=97

PIDFILE="/tmp/run/watchcat"

append_string() {
	local varname="$1"
	local add="$2"
	local separator="${3:- }"
	local actual
	eval "actual=\$$varname"

	new="${actual:+$actual$separator}$add"
	eval "$varname=\$new"
}

time_to_seconds() {
	local time=$1
	unset seconds

	{ [ "$time" -ge 1 ] 2>/dev/null && seconds="$time"; } ||
		{ [ "${time%s}" -ge 1 ] 2>/dev/null && seconds="${time%s}"; } ||
		{ [ "${time%m}" -ge 1 ] 2>/dev/null && seconds=$((${time%m} * 60)); } ||
		{ [ "${time%h}" -ge 1 ] 2>/dev/null && seconds=$((${time%h} * 3600)); } ||
		{ [ "${time%d}" -ge 1 ] 2>/dev/null && seconds=$((${time%d} * 86400)); }
}

load_watchcat() {
	config_get period $1 period
	config_get mode $1 mode
	config_get pinghosts $1 pinghosts
	config_get ping_period $1 ping_period
	config_get no_ping_time $1 no_ping_time
	config_get force_delay $1 force_delay
	config_get ping_size $1 ping_size "standard"

	local nopingtime_dflt="900"
	local force_delay_default="60"

	# Fix potential typo in mode (backward compatibility).
	[ "$mode" = "allways" ] && mode="periodic_reboot"
	[ "$mode" = "always" ] && mode="periodic_reboot"
	[ "$mode" = "ping" ] && mode="ping_reboot"
	
	error=""
	warn=""

	if [ -z "$period" ]; then
		append_string "error" "period is not set! Use time value(ex: '30'; '4m'; '6h'; '2d')." "; "
	else
		time_to_seconds "$period"
		period="$seconds"
		[ "$period" -ge 1 ] ||
			append_string "error" "period has invalid format! Use time value(ex: '30'; '4m'; '6h'; '2d')" "; "
	fi

	[ "$mode" = "periodic_reboot" -o "$mode" = "ping_reboot" ] ||
		append_string "error" "mode must be 'periodic_reboot' or 'ping_reboot'" "; "

	if [ -z "$force_delay" ]; then
		force_delay="$force_delay_default"
		append_string "warn" "force_delay is not configured! Defaulted to $force_delay seconds" "; "
	else
		[ "$force_delay" -ge 0 ] || {
			force_delay="$force_delay_default"
			append_string "warn" "force_delay is invalid! Defaulted to $force_delay seconds" "; "
		}
	fi

	[ -z "$error" -a "$mode" = "ping_reboot" ] && {
		[ -z "$pinghosts" ] &&
			append_string "error" "pinghosts must be set in 'ping_reboot' mode! Use space separated address list (ex: '8.8.8.8 9.9.9.9')" "; "

		if [ -z "$no_ping_time" ]; then
			no_ping_time="$nopingtime_dflt"
			append_string "warn" "no_ping_time is not configured! Defaulted to $no_ping_time seconds" "; "
		else
			time_to_seconds "$no_ping_time"
			no_ping_time="$seconds"
			[ "$no_ping_time" -ge 0 ] || {
				no_ping_time="$nopingtime_dflt"
				append_string "warn" "no_ping_time invalid format! Use time value(ex: '30'; '4m'; '6h'; '2d'). Defaulted to $no_ping_time seconds" "; "
			}
		fi

		local ping_period_default="$((period / 5))"

		if [ -z "$ping_period" ]; then
			ping_period="$ping_period_default"
			append_string "warn" "ping_period is not configured! Defaulted to $ping_period seconds(1/5 of period)" "; "
		else
			time_to_seconds "$ping_period"
			ping_period="$seconds"
			[ "$ping_period" -ge 0 -a "$ping_period" -ge "$period" ] && {
				ping_period="$ping_period_default"
				append_string "warn" "ping_period is invalid value(greater than period)! Defaulted to $ping_period seconds(1/5 of period)" "; "
			}
			[ "$ping_period" -ge 0 ] || {
				ping_period="$ping_period_default"
				append_string "warn" "ping_period has invalid format! Use time value(ex: '30'; '4m'; '6h'; '2d'). Defaulted to $ping_period seconds(1/5 of period)" "; "
			}
		fi
	}

	[ -n "$warn" ] && logger -p user.warn -t "watchcat" "$1: $warn"
	[ -n "$error" ] && {
		logger -p user.err -t "watchcat" "reboot program $1 not started - $error"
		return
	}

	case "$mode" in
	periodic_reboot)
		/usr/bin/watchcat.sh "periodic_reboot" "$period" "$force_delay" &
		logger -p user.info -t "watchcat" "started task (mode=$mode;period=$period;force_delay=$force_delay)"
		;;
	ping_reboot)
		/usr/bin/watchcat.sh "ping_reboot" "$period" "$force_delay" "$ping_hosts" "$ping_period" "$no_ping_time" "$ping_size" &
		logger -p user.info -t "watchcat" "started task (mode=$mode;period=$period;ping_hosts=$ping_hosts;ping_period=$ping_period;force_delay=$force_delay;no_ping_time=$no_ping_time;ping_size=$ping_size)"
		;;
	*)
		echo "Error starting Watchcat service. Invalid mode selection: $mode"
		;;
	esac
	
	echo $! >>"${PIDFILE}.pids"
}

stop() {
	if [ -f "${PIDFILE}.pids" ]; then
		logger -p user.info -t "watchcat" "stopping all tasks"

		while read pid; do
			kill -KILL "$pid"
		done <"${PIDFILE}.pids"

		rm "${PIDFILE}.pids"

		logger -p user.info -t "watchcat" "all tasks stopped"
	else
		logger -p user.info -t "watchcat" "no tasks running"
	fi
}

start() {
	[ -f "${PIDFILE}.pids" ] && stop

	config_load system
	if [ -n "$(uci show system.@watchcat[0])" ]; then # at least one watchcat section exists
		logger -p user.info -t "watchcat" "starting all tasks"
		config_foreach load_watchcat watchcat
		logger -p user.info -t "watchcat" "all tasks started"
	else
		logger -p user.info -t "watchcat" "no tasks defined"
	fi
}
